{"version":3,"sources":["enums/DisciplineType.ts","components/Banner.tsx","functions/GetProficiencyLevel.ts","functions/GetDisciplineByDisciplineType.ts","components/Skill.tsx","components/Skills.tsx","components/Link.tsx","components/Card.tsx","components/Cards.tsx","components/Footer.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["DisciplineType","Banner","title","subtitle","tagline","role","className","GetProficiencyLevel","percentage","GetDisciplineByDisciplineType","disciplineType","discipline","Backend","Frontend","Process","Skill","skill","site","proficiency","profLevel","color","classNameForProficiency","toLowerCase","disciplineName","disciplineClass","href","style","padding","Skills","sortedSkills","items","sort","a","b","map","item","i","Link","name","url","tooltip","rel","target","aria-label","width","height","viewBox","focusable","fill","fillRule","d","Card","links","Cards","props","cardClass","length","Footer","currentYear","Date","getFullYear","yearRange","App","toc","skills","cards","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","console","log"],"mappings":"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","file":"static/js/main.1514fd2c.chunk.js","sourcesContent":["enum DisciplineType {\n  Backend = 0,\n  Frontend,\n  Process\n}\n\nexport default DisciplineType;","import { FC } from 'react';\n\nconst Banner: FC<any> = function({ title, subtitle, tagline }) {\n  return (\n    <header role=\"banner\">\n      <div className=\"jumbotron\">\n        <h1 className=\"text-center fs-1 text-monospace\">{title}</h1>\n        <h2 className=\"text-center fs-5 text-monospace\">{subtitle}</h2>\n        <div className=\"text-center text-muted\">\n          <small><em>{tagline}</em></small>\n        </div>\n      </div>\n    </header>\n  );\n}\n\nexport default Banner;\n","const GetProficiencyLevel = (percentage: number): string => {\n  if (percentage <= 25) {\n    return \"Basic\";\n  }\n  if (percentage <= 50) {\n    return \"Working\";\n  }\n  if (percentage <= 75) {\n    return \"Extensive\";\n  }\n  return \"Expert\";\n}\n\nexport default GetProficiencyLevel;","import DisciplineType from '../enums/DisciplineType';\n\nconst GetDisciplineByDisciplineType = (disciplineType: DisciplineType): string => {\n  let discipline = \"\";\n  switch (disciplineType) {\n    case DisciplineType.Backend: { discipline = \"Backend\"; break; }\n    case DisciplineType.Frontend: { discipline = \"Frontend\"; break; }\n    case DisciplineType.Process: { discipline = \"Process\"; break; }\n  }\n  return discipline;\n}\n\nexport default GetDisciplineByDisciplineType;","import React, { FC } from \"react\";\nimport ISkill from \"../interfaces/ISkill\";\nimport GetProficiencyLevel from '../functions/GetProficiencyLevel';\nimport GetDisciplineByDisciplineType from '../functions/GetDisciplineByDisciplineType';\n\nconst Skill: FC<ISkill> = function({ discipline, skill, site, proficiency, color }) {\n  const styleForSkill = {\n    padding: \"0.25em 1em\"\n  }\n  const profLevel = GetProficiencyLevel(proficiency);\n  const classNameForProficiency = \"text-start \" + profLevel.toLowerCase() + \"-\" + discipline;\n  const disciplineName = GetDisciplineByDisciplineType(discipline);\n  const disciplineClass = \"col-lg-1 text-white text-center d-none d-lg-block discipline-\" + discipline;\n  return (\n    <div className=\"row mb-1\">      \n      <div className=\"col-lg-3 col-md-4 col text-end code\">\n        <a href={site} style={styleForSkill}>{skill}</a>\n      </div>\n      <div className={disciplineClass}>\n        {disciplineName}\n      </div>\n      <div className=\"col-md-8 col\">\n        <div className=\"bg-light w-100\">\n          <div className={classNameForProficiency}>\n            <div className=\"ms-1 text-white\">{profLevel}</div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Skill;\n","import { FC } from \"react\";\nimport ISkill from \"../interfaces/ISkill\";\nimport Skill from \"./Skill\";\n\nconst Skills: FC<any> = function({ items }) {\n  const sortedSkills = items.sort((a: ISkill, b: ISkill) => a.discipline - b.discipline);\n  return (\n    <div className=\"container mb-5\">\n      <div className=\"row mb-1\">\n        <div className=\"col-lg-3 col-md-4 col text-end fw-bold pe-4\">Skill</div>\n        <div className=\"col-lg-1 d-none d-lg-block text-center fw-bold\">Discipline</div>\n        <div className=\"col-md-8 col text-start fw-bold\">Proficiency <small className=\"fw-normal\">(as defined <a href=\"https://hr.uiowa.edu/careers/competencies/proficiency-levels\">here</a>)</small></div>\n      </div>\n      {sortedSkills.map((item: ISkill, i: number) => {\n        return (\n          <Skill key={++i} site={item.site} skill={item.skill} proficiency={item.proficiency} color={item.color} discipline={item.discipline} />\n        );\n      })}\n    </div>\n  );\n}\n\nexport default Skills;\n","import { FC } from \"react\";\nimport ILink from \"../interfaces/ILink\";\n\nconst Link: FC<ILink> = function({ name, url, tooltip }) { \n  return (\n    <div className=\"mb-2\">\n      <a href={url} rel=\"noreferrer\" target=\"_blank\" title={tooltip}>{name}\n        <span role=\"img\" aria-label=\"follow\">\n          <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" focusable=\"false\" role=\"presentation\">\n            <g fill=\"currentColor\" fillRule=\"evenodd\">\n              <path d=\"M11.031 7A1.03 1.03 0 0 0 10 8.036a1.05 1.05 0 0 0 1.044 1.045l3.121.014.014 3.121a1.05 1.05 0 0 0 1.045 1.044 1.03 1.03 0 0 0 1.036-1.035l-.019-4.161a1.053 1.053 0 0 0-1.045-1.045L11.035 7h-.004z\"></path><path d=\"M13.364 8.292l-7.072 7.071a1.002 1.002 0 0 0 0 1.415c.39.39 1.024.39 1.415 0l7.071-7.071A1.002 1.002 0 0 0 14.071 8a1 1 0 0 0-.707.292z\">\n              </path>\n            </g>\n          </svg>\n        </span>\n      </a>\n    </div>\n  );\n}\n\nexport default Link;","import { FC } from 'react';\nimport ICardProps from \"../interfaces/ICardProps\";\nimport ILink from '../interfaces/ILink';\nimport Link from \"./Link\";\n\nconst Card: FC<ICardProps> = function({ title, subtitle, links }) {\n  return (\n    <div className=\"card card-equal-height p-5 bg-highlight-muted\">\n      <h2>{title}</h2>\n      <div className=\"mb-3\">\n        <em>{subtitle}</em>\n      </div>\n      {links.map((item: ILink, i: number) => {\n        return (\n          <Link key={++i} name={item.name} url={item.url} tooltip={item.tooltip} />\n        );\n      })}\n    </div>\n  );\n}\n\nexport default Card;\n","import { FC } from 'react';\nimport Card from \"./Card\";\nimport ICardProps from '../interfaces/ICardProps';\n\nconst Cards: FC<any> = function({ props }) {\n  let cardClass = \"\";\n  if (props.length === 1) {\n    cardClass = \"col-sm-12 mb-2 text-center\";\n  } else if (props.length === 2) {\n    cardClass = \"col-lg-6 col-sm-12 mb-2 text-center\";\n  } else if (props.length === 3) {\n    cardClass = \"col-lg-4 col-md-6 col-sm-12 mb-2 text-center\";\n  }\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        {props.map((item: ICardProps, i: number) => {\n          return (\n            <div key={++i} className={cardClass}>\n              <Card key={++i} title={item.title} subtitle={item.subtitle} links={item.links} />\n            </div>\n          )\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default Cards;\n","import React, { FC } from 'react';\n\nconst Footer: FC = function() {\n  const currentYear:number = new Date().getFullYear();\n  const yearRange = currentYear === 2021\n    ? \"2021\"\n    : `2021 - ${currentYear}`;\n\n  return (\n    <footer className=\"mt-5 p-3 text-center fg-highlight3\" role=\"contentinfo\">\n      <div className=\"mt-3\">\n        <em>(c) {yearRange} Copyright JasonFedler.com</em>\n      </div>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import './App.css';\nimport toc from \"./toc.json\";\nimport Banner from \"./components/Banner\";\nimport Skills from \"./components/Skills\";\nimport Cards from \"./components/Cards\"\nimport Footer from \"./components/Footer\";\n\nfunction App() {\n  return (\n    <>\n      <Banner title={toc.title} subtitle={toc.subtitle} tagline={toc.tagline} />\n      <main role=\"main\">\n        <Skills items={toc.skills} />\n        <Cards props={toc.cards} />\n      </main>\n      <Footer />\n    </>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(console.log);\n"],"sourceRoot":""}